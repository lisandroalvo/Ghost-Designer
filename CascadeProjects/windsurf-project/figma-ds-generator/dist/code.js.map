{
  "version": 3,
  "sources": ["../src/tokens.json", "../src/code.ts"],
  "sourcesContent": ["{\n  \"colors\": {\n    \"primary\": {\"500\": \"#4F46E5\", \"600\": \"#4338CA\"},\n    \"neutral\": {\"0\": \"#FFFFFF\", \"50\": \"#F9FAFB\", \"900\": \"#111827\"},\n    \"danger\": {\"500\": \"#EF4444\"}\n  },\n  \"typography\": {\n    \"body\": {\"fontFamily\": \"Inter\", \"fontSize\": 14, \"lineHeight\": 20, \"fontWeight\": 400},\n    \"label\": {\"fontFamily\": \"Inter\", \"fontSize\": 12, \"lineHeight\": 16, \"fontWeight\": 600}\n  },\n  \"spacing\": {\"xs\": 4, \"sm\": 8, \"md\": 12, \"lg\": 16, \"xl\": 24},\n  \"radii\": {\"sm\": 4, \"md\": 8, \"lg\": 12, \"pill\": 999},\n  \"elevation\": {\n    \"1\": {\"type\": \"drop-shadow\", \"x\": 0, \"y\": 1, \"blur\": 2, \"spread\": 0, \"color\": \"rgba(0,0,0,0.1)\"},\n    \"2\": {\"type\": \"drop-shadow\", \"x\": 0, \"y\": 4, \"blur\": 8, \"spread\": 0, \"color\": \"rgba(0,0,0,0.12)\"}\n  }\n}\n", "import { validateTokens } from './lib/tokens';\nimport exampleTokens from './tokens.json';\n\ninterface GeneratorOptions {\n  useBuiltInTokens: boolean;\n  generateStyles: boolean;\n  generateButton: boolean;\n  generateTextField: boolean;\n  generateCard: boolean;\n  tokensJson?: string;\n}\n\n// Show the plugin UI\nfigma.showUI(__html__, { width: 320, height: 480 });\n\n// Handle messages from the UI\nfigma.ui.onmessage = async (msg) => {\n  if (msg.type === 'generate') {\n    try {\n      const options: GeneratorOptions = msg.options;\n      let tokens: any;\n\n      // Load tokens\n      if (options.useBuiltInTokens) {\n        tokens = exampleTokens;\n      } else if (options.tokensJson) {\n        try {\n          tokens = JSON.parse(options.tokensJson);\n        } catch (e) {\n          figma.ui.postMessage({ type: 'error', message: `Invalid JSON: ${e instanceof Error ? e.message : 'Unknown error'}` });\n          return;\n        }\n      } else {\n        figma.ui.postMessage({ type: 'error', message: 'No tokens provided' });\n        return;\n      }\n\n      // Create or get the design system page\n      let page = figma.root.children.find(p => p.name === 'Design System') as PageNode;\n      if (!page) {\n        page = figma.createPage();\n        page.name = 'Design System';\n      }\n      figma.currentPage = page;\n\n      // Clear existing nodes on the page\n      page.children.forEach((node) => node.remove());\n\n      // Create styles first\n      if (options.generateStyles) {\n        createStyles(tokens);\n      }\n\n      let xOffset = 50;\n      const yOffset = 50;\n\n      // Generate components\n      if (options.generateButton) {\n        createButtonComponents(tokens, xOffset, yOffset);\n        xOffset += 400;\n      }\n\n      if (options.generateTextField) {\n        createTextFieldComponents(tokens, xOffset, yOffset);\n        xOffset += 400;\n      }\n\n      if (options.generateCard) {\n        createCardComponents(tokens, xOffset, yOffset);\n      }\n\n      // Zoom to fit all content\n      figma.viewport.scrollAndZoomIntoView(page.children);\n\n      figma.ui.postMessage({ type: 'complete' });\n    } catch (error) {\n      console.error('Generation error:', error);\n      figma.ui.postMessage({ \n        type: 'error', \n        message: `Generation failed: ${error instanceof Error ? error.message : 'Unknown error'}` \n      });\n    }\n  }\n};\n\n// Helper functions\nfunction hexToRgb(hex: string): { r: number; g: number; b: number } {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result ? {\n    r: parseInt(result[1], 16) / 255,\n    g: parseInt(result[2], 16) / 255,\n    b: parseInt(result[3], 16) / 255\n  } : { r: 0, g: 0, b: 0 };\n}\n\nfunction createStyles(tokens: any) {\n  // Create color styles\n  Object.entries(tokens.colors).forEach(([category, shades]: [string, any]) => {\n    Object.entries(shades).forEach(([shade, value]: [string, any]) => {\n      const styleName = `${category}/${shade}`;\n      \n      // Check if style already exists\n      const existingStyle = figma.getLocalPaintStyles().find(s => s.name === styleName);\n      if (existingStyle) return;\n\n      const style = figma.createPaintStyle();\n      style.name = styleName;\n      \n      const rgb = hexToRgb(value);\n      style.paints = [{\n        type: 'SOLID',\n        color: rgb\n      }];\n    });\n  });\n\n  // Create text styles\n  Object.entries(tokens.typography).forEach(([name, typo]: [string, any]) => {\n    const styleName = `Text/${name}`;\n    \n    const existingStyle = figma.getLocalTextStyles().find(s => s.name === styleName);\n    if (existingStyle) return;\n\n    const style = figma.createTextStyle();\n    style.name = styleName;\n    style.fontSize = typo.fontSize;\n    style.fontName = { family: typo.fontFamily, style: 'Regular' };\n    style.lineHeight = { value: typo.lineHeight, unit: 'PIXELS' };\n  });\n}\n\nfunction createButtonComponents(tokens: any, x: number, y: number) {\n  const variants = ['primary', 'secondary', 'danger'];\n  \n  variants.forEach((variant, index) => {\n    const button = createButton(tokens, variant);\n    button.x = x;\n    button.y = y + (index * 80);\n    \n    // Create component\n    const component = figma.createComponent();\n    component.appendChild(button);\n    component.name = `Button/${variant}`;\n    figma.currentPage.appendChild(component);\n  });\n}\n\nfunction createButton(tokens: any, variant: string) {\n  const frame = figma.createFrame();\n  frame.name = `Button-${variant}`;\n  frame.resize(120, 40);\n  frame.cornerRadius = tokens.radii.md;\n  \n  // Set background based on variant\n  let bgColor: { r: number; g: number; b: number };\n  let textColor: { r: number; g: number; b: number };\n  \n  switch (variant) {\n    case 'primary':\n      bgColor = hexToRgb(tokens.colors.primary['500']);\n      textColor = hexToRgb(tokens.colors.neutral['0']);\n      break;\n    case 'secondary':\n      bgColor = hexToRgb(tokens.colors.neutral['50']);\n      textColor = hexToRgb(tokens.colors.neutral['900']);\n      frame.strokes = [{ type: 'SOLID', color: hexToRgb(tokens.colors.neutral['900']) }];\n      frame.strokeWeight = 1;\n      break;\n    case 'danger':\n      bgColor = hexToRgb(tokens.colors.danger['500']);\n      textColor = hexToRgb(tokens.colors.neutral['0']);\n      break;\n    default:\n      bgColor = hexToRgb(tokens.colors.primary['500']);\n      textColor = hexToRgb(tokens.colors.neutral['0']);\n  }\n  \n  frame.fills = [{ type: 'SOLID', color: bgColor }];\n  \n  // Create text\n  const text = figma.createText();\n  text.characters = `${variant.charAt(0).toUpperCase() + variant.slice(1)} Button`;\n  text.fontSize = tokens.typography.label.fontSize;\n  text.fontName = { family: tokens.typography.label.fontFamily, style: 'Regular' };\n  text.fills = [{ type: 'SOLID', color: textColor }];\n  text.textAlignHorizontal = 'CENTER';\n  text.textAlignVertical = 'CENTER';\n  text.resize(frame.width, frame.height);\n  \n  frame.appendChild(text);\n  return frame;\n}\n\nfunction createTextFieldComponents(tokens: any, x: number, y: number) {\n  const variants = ['default', 'error', 'disabled'];\n  \n  variants.forEach((variant, index) => {\n    const textField = createTextField(tokens, variant);\n    textField.x = x;\n    textField.y = y + (index * 120);\n    \n    // Create component\n    const component = figma.createComponent();\n    component.appendChild(textField);\n    component.name = `TextField/${variant}`;\n    figma.currentPage.appendChild(component);\n  });\n}\n\nfunction createTextField(tokens: any, variant: string) {\n  const container = figma.createFrame();\n  container.name = `TextField-${variant}`;\n  container.layoutMode = 'VERTICAL';\n  container.itemSpacing = tokens.spacing.xs;\n  container.fills = [];\n  \n  // Create label\n  const label = figma.createText();\n  label.characters = 'Label Text';\n  label.fontSize = tokens.typography.label.fontSize;\n  label.fontName = { family: tokens.typography.label.fontFamily, style: 'Regular' };\n  label.fills = [{ type: 'SOLID', color: hexToRgb(tokens.colors.neutral['900']) }];\n  \n  container.appendChild(label);\n  \n  // Create input field\n  const input = figma.createFrame();\n  input.resize(250, 40);\n  input.cornerRadius = tokens.radii.sm;\n  \n  const bgColor = variant === 'disabled' \n    ? hexToRgb(tokens.colors.neutral['50'])\n    : hexToRgb(tokens.colors.neutral['0']);\n  \n  input.fills = [{ type: 'SOLID', color: bgColor }];\n  \n  const borderColor = variant === 'error' \n    ? hexToRgb(tokens.colors.danger['500'])\n    : hexToRgb(tokens.colors.neutral['50']);\n  \n  input.strokes = [{ type: 'SOLID', color: borderColor }];\n  input.strokeWeight = 1;\n  \n  // Add placeholder text\n  const placeholder = figma.createText();\n  placeholder.characters = 'Placeholder text';\n  placeholder.fontSize = tokens.typography.body.fontSize;\n  placeholder.fontName = { family: tokens.typography.body.fontFamily, style: 'Regular' };\n  placeholder.fills = [{ type: 'SOLID', color: hexToRgb(tokens.colors.neutral['900']) }];\n  placeholder.opacity = variant === 'disabled' ? 0.5 : 1;\n  \n  placeholder.x = tokens.spacing.sm;\n  placeholder.y = (input.height - placeholder.height) / 2;\n  \n  input.appendChild(placeholder);\n  container.appendChild(input);\n  \n  // Add error message for error variant\n  if (variant === 'error') {\n    const errorMsg = figma.createText();\n    errorMsg.characters = 'Error message here';\n    errorMsg.fontSize = tokens.typography.label.fontSize;\n    errorMsg.fontName = { family: tokens.typography.label.fontFamily, style: 'Regular' };\n    errorMsg.fills = [{ type: 'SOLID', color: hexToRgb(tokens.colors.danger['500']) }];\n    \n    container.appendChild(errorMsg);\n  }\n  \n  return container;\n}\n\nfunction createCardComponents(tokens: any, x: number, y: number) {\n  const variants = ['default', 'elevated'];\n  \n  variants.forEach((variant, index) => {\n    const card = createCard(tokens, variant);\n    card.x = x;\n    card.y = y + (index * 200);\n    \n    // Create component\n    const component = figma.createComponent();\n    component.appendChild(card);\n    component.name = `Card/${variant}`;\n    figma.currentPage.appendChild(component);\n  });\n}\n\nfunction createCard(tokens: any, variant: string) {\n  const card = figma.createFrame();\n  card.name = `Card-${variant}`;\n  card.resize(280, 160);\n  card.cornerRadius = tokens.radii.lg;\n  card.layoutMode = 'VERTICAL';\n  card.itemSpacing = tokens.spacing.md;\n  card.paddingTop = tokens.spacing.md;\n  card.paddingRight = tokens.spacing.md;\n  card.paddingBottom = tokens.spacing.md;\n  card.paddingLeft = tokens.spacing.md;\n  \n  // Set background\n  card.fills = [{ type: 'SOLID', color: hexToRgb(tokens.colors.neutral['0']) }];\n  \n  // Add shadow effect\n  const shadowLevel = variant === 'elevated' ? '2' : '1';\n  const shadow = tokens.elevation[shadowLevel];\n  const shadowColor = hexToRgb(shadow.color);\n  \n  card.effects = [{\n    type: 'DROP_SHADOW',\n    color: { ...shadowColor, a: 0.1 },\n    offset: { x: shadow.x, y: shadow.y },\n    radius: shadow.blur,\n    spread: shadow.spread,\n    visible: true,\n    blendMode: 'NORMAL'\n  }];\n  \n  // Add title\n  const title = figma.createText();\n  title.characters = 'Card Title';\n  title.fontSize = tokens.typography.body.fontSize;\n  title.fontName = { family: tokens.typography.label.fontFamily, style: 'Regular' };\n  title.fills = [{ type: 'SOLID', color: hexToRgb(tokens.colors.neutral['900']) }];\n  \n  card.appendChild(title);\n  \n  // Add content\n  const content = figma.createText();\n  content.characters = 'This is the card content area. You can add any content here.';\n  content.fontSize = tokens.typography.body.fontSize;\n  content.fontName = { family: tokens.typography.body.fontFamily, style: 'Regular' };\n  content.fills = [{ type: 'SOLID', color: hexToRgb(tokens.colors.neutral['900']) }];\n  content.resize(card.width - (tokens.spacing.md * 2), content.height);\n  \n  card.appendChild(content);\n  \n  return card;\n}\n"],
  "mappings": "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",
  "names": []
}
